<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('../partials/head.ejs')%>
    </head>

    <body>
        <div class="container">

            <h1 style="color:aliceblue">Centro de mensajes</h1>
            <div class="messages" style= "color: brown" id="message-center">
            </div>
            <form id="form" action="" enctype="application/x-www-form-urlencoded" onsubmit="return addMessage(this)">
                <input type="text" id="email" placeholder="Tu email"> <br>
                <input type="text" id="nombre" placeholder="Tu nombre"> 
                <input type="text" id="apellido" placeholder="Tu apellido"> <br>
                <input type="text" id="edad" placeholder="Tu edad"> 
                <input type="text" id="alias" placeholder="Tu alias"> 
                <input type="text" id="avatar" placeholder="Tu avatar"> <br>
                <input type="text" id="mensaje" placeholder="Di algo..."> 
                <br>
                <br>
                <input type="submit" value="Enviar">
            </form>

        </div>

        <script src="/socket.io/socket.io.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/normalizr@3.6.1/dist/normalizr.browser.min.js"></script>
        <script>
            const socket = io();

            function getFullDate(){
                let date = new Date();

                let d = date.getDate();
                let mo = date.getMonth() + 1;
                let y = date.getFullYear();
                let h = date.getHours();
                let mi = date.getMinutes();
                let s = date.getSeconds();

                return d + '/' + mo + '/' + y + ' ' + h + ':' + mi + ':' + s;
            } 

            function addMessage(event) {
                let today = getFullDate();

                let mensaje = {
                    email: document.getElementById('email').value,
                    timestamp: today,
                    message: document.getElementById('message').value
                };

                socket.emit('new-message', mensaje);
                return false;
            }

            function renderMessages(data) {

                const denormalizedData = denormalize(data.result, chatSchema, data.entities);

                var html = denormalizedData.map(function(elem, index) {
                    return(`<div>
                                <strong style= "color: blue">${elem.email}</strong> <i style="color:green">${elem.message}</i> </br> 
                            </div`)
                }).join(" ");

                document.getElementById('message-center').innerHTML = html;
            }

            socket.on('messages', function(data) {
                console.log(data);
                renderMessages(data);
            })

            socket.on('mensaje-user', function(payload) {
                console.log(payload)
            })

        </script>
    </body>
</html>
